{"ast":null,"code":"var _jsxFileName = \"/Users/natalietam/Documents/GitHub/superchat/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport './App.css';\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/analytics';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfirebase.initializeApp({\n  apiKey: \"AIzaSyCSVcsVMtYBpk8MUDecEmkcUH7QRfpR48E\",\n  authDomain: \"superchat-a53f7.firebaseapp.com\",\n  projectId: \"superchat-a53f7\",\n  storageBucket: \"superchat-a53f7.appspot.com\",\n  messagingSenderId: \"76730308952\",\n  appId: \"1:76730308952:web:0d56412ac3a0d36954ed2d\",\n  measurementId: \"G-0MHRKEQ2JS\"\n});\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\nconst analytics = firebase.analytics();\n\nfunction App() {\n  _s();\n\n  const [user] = useAuthState(auth);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: user ? /*#__PURE__*/_jsxDEV(ChatRoom, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"hP/7NvzUIXfxIpRVjMlmHSnysKo=\", false, function () {\n  return [useAuthState];\n});\n\n_c = App;\n\nfunction SignIn() {\n  /*#__PURE__*/\n  _jsxDEV(\"button\", {\n    children: \"Sign in with Google\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, this);\n}\n\n_c2 = SignIn;\n\nfunction SignOut() {\n  return auth.currentUser && /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"sign-out\",\n    onClick: () => auth.signOut(),\n    children: \"Sign Out\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = SignOut;\n\nfunction ChatRoom() {\n  _s2();\n\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(25);\n  const [messages] = useCollectionData(query, {\n    idField: 'id'\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: messages && messages.map(msg => /*#__PURE__*/_jsxDEV(ChatMessage, {\n        message: msg\n      }, msg.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 40\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s2(ChatRoom, \"O0dyPdqNWV0yO5QBetp+6dw5Oyk=\", false, function () {\n  return [useCollectionData];\n});\n\n_c4 = ChatRoom;\n\nfunction ChatMessage(props) {\n  const {\n    text,\n    uid\n  } = props.message;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Hello\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 10\n  }, this);\n}\n\n_c5 = ChatMessage;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"SignIn\");\n$RefreshReg$(_c3, \"SignOut\");\n$RefreshReg$(_c4, \"ChatRoom\");\n$RefreshReg$(_c5, \"ChatMessage\");","map":{"version":3,"sources":["/Users/natalietam/Documents/GitHub/superchat/src/App.js"],"names":["React","useRef","useState","firebase","useAuthState","useCollectionData","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","analytics","App","user","SignIn","SignOut","currentUser","signOut","ChatRoom","messagesRef","collection","query","orderBy","limit","messages","idField","map","msg","id","ChatMessage","props","text","uid","message"],"mappings":";;;;AACA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAO,WAAP;AAEA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAO,sBAAP;AACA,OAAO,2BAAP;AACA,OAAO,2BAAP;AAEA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;;;AAEAF,QAAQ,CAACG,aAAT,CAAuB;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,iCAFS;AAGrBC,EAAAA,SAAS,EAAE,iBAHU;AAIrBC,EAAAA,aAAa,EAAE,6BAJM;AAKrBC,EAAAA,iBAAiB,EAAE,aALE;AAMrBC,EAAAA,KAAK,EAAE,0CANc;AAOrBC,EAAAA,aAAa,EAAE;AAPM,CAAvB;AAUA,MAAMC,IAAI,GAAGX,QAAQ,CAACW,IAAT,EAAb;AACA,MAAMC,SAAS,GAAGZ,QAAQ,CAACY,SAAT,EAAlB;AACA,MAAMC,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;;AAMA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,IAASd,YAAY,CAACU,IAAD,CAA3B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,gBACGI,IAAI,gBAAG,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAkB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADzB;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAdQD,G;UACQb,Y;;;KADRa,G;;AAgBT,SAASE,MAAT,GAAiB;AACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD;;MAFQA,M;;AAIT,SAASC,OAAT,GAAkB;AAChB,SAAON,IAAI,CAACO,WAAL,iBACL;AAAQ,IAAA,SAAS,EAAC,UAAlB;AAA6B,IAAA,OAAO,EAAE,MAAMP,IAAI,CAACQ,OAAL,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;MAJQF,O;;AAKT,SAASG,QAAT,GAAoB;AAAA;;AAClB,QAAMC,WAAW,GAAGT,SAAS,CAACU,UAAV,CAAqB,UAArB,CAApB;AACA,QAAMC,KAAK,GAAGF,WAAW,CAACG,OAAZ,CAAoB,WAApB,EAAiCC,KAAjC,CAAuC,EAAvC,CAAd;AAEA,QAAM,CAACC,QAAD,IAAaxB,iBAAiB,CAACqB,KAAD,EAAQ;AAAEI,IAAAA,OAAO,EAAE;AAAX,GAAR,CAApC;AACA,sBAAQ;AAAA,2BACN;AAAA,gBAEGD,QAAQ,IAAIA,QAAQ,CAACE,GAAT,CAAaC,GAAG,iBAAI,QAAC,WAAD;AAA0B,QAAA,OAAO,EAAEA;AAAnC,SAAkBA,GAAG,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA,cAApB;AAFf;AAAA;AAAA;AAAA;AAAA;AADM,mBAAR;AAQD;;IAbQV,Q;UAIYlB,iB;;;MAJZkB,Q;;AAgBT,SAASW,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAgBF,KAAK,CAACG,OAA5B;AACA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;MAHQJ,W;AAST,eAAejB,GAAf","sourcesContent":["\nimport React, { useRef, useState } from 'react';\nimport './App.css';\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/analytics';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyCSVcsVMtYBpk8MUDecEmkcUH7QRfpR48E\",\n  authDomain: \"superchat-a53f7.firebaseapp.com\",\n  projectId: \"superchat-a53f7\",\n  storageBucket: \"superchat-a53f7.appspot.com\",\n  messagingSenderId: \"76730308952\",\n  appId: \"1:76730308952:web:0d56412ac3a0d36954ed2d\",\n  measurementId: \"G-0MHRKEQ2JS\"\n})\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\nconst analytics = firebase.analytics();\n\n\n\n\n\nfunction App() {\n  const [user] = useAuthState(auth);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>hello</h1>\n      </header>\n      <section>\n        {user ? <ChatRoom /> : <SignIn />}\n      </section>\n\n    </div>\n  );\n}\n\nfunction SignIn(){\n  <button>Sign in with Google</button>\n}\n\nfunction SignOut(){\n  return auth.currentUser && (\n    <button className=\"sign-out\" onClick={() => auth.signOut()}>Sign Out</button>\n  )\n}\nfunction ChatRoom() {\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(25);\n\n  const [messages] = useCollectionData(query, { idField: 'id' });\n  return (<>\n    <main>\n\n      {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n\n    </main>\n    </>\n    )\n}\n\n\nfunction ChatMessage(props) {\n  const { text, uid } = props.message;\n  return <p>Hello</p>\n}\n\n\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}